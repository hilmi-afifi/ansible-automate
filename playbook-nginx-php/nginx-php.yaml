# Ansible Automation on Centos + Ubuntu
# Install Webserver NGINX + PHP
# (c) 2022 Hilmi Afifi

###################
### Host Ubuntu ###
###################
- hosts: ubuntu

  # Make Variable
  vars:
    ubuntu: ubuntu.thanos.my.id

  # Start Doing Work
  tasks:
    - name: Update apt Cache
      apt:
        update_cache: yes

    - name: Install Nginx + PHP
      apt:
        pkg:
        - nginx
        - php8.1-fpm
        - php8.1-common
        - net-tools
        - nano
        - wget
        - git
        - tree

    - name: Start php8.1-fpm
      service:
        name: php8.1-fpm
        state: started

    - name: Allow All Access to TCP Port 80
      ufw:
        rule: allow
        port: 80
        proto: tcp

    - name: Create Directory /var/www/{{ubuntu}}
      file:
        path: "/var/www/{{ubuntu}}"
        state: directory
        owner: root
        group: root
        mode: 0775
        recurse: yes

    - name: Create Directory {{item}}
      file:
        path: "/etc/nginx/{{item}}"
        state: directory
        owner: root
        group: root
        mode: 0775
      with_items: ["sites-available", "sites-enabled"]

    - name: Create + Setting Virtual Host
      copy:
        dest: "/etc/nginx/sites-available/{{ubuntu}}"
        content: |
          server {
            listen 80;
            server_name {{ubuntu}};
            root /var/www/{{ubuntu}};
            index index.html index.htm index.php;
            location / {
              try_files $uri $uri/ =404;
            }
            location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
            }
            location ~ /\.ht {
              deny all;
            }
          }
    - name: Create Symbolic Link
      file:
        src: "/etc/nginx/sites-available/{{ubuntu}}"
        dest: "/etc/nginx/sites-enabled/{{ubuntu}}"
        state: link
        force: yes

    - name: Create + Setting Info PHP
      copy:
        dest: "/var/www/{{ubuntu}}/index.php"
        content: |
          <?php
          // Show all information, defaults to INFO_ALL
          phpinfo();
          // Show just the module information.
          // phpinfo(8) yields identical results.
          phpinfo(INFO_MODULES);
          ?>
    - name: Restart Nginx Service
      service:
        name: nginx
        state: restarted

###################
### Host Centos ###
###################
- hosts: centos

  # Make Variable
  vars:
    centos: centos.thanos.my.id
    nginx: /etc/nginx/nginx.conf

# Start Doing Work
  tasks:
    - name: Install Nginx and PHP
      yum:
        pkg:
        - nginx
        - php-fpm
        - php-common
        - net-tools
        - nano
        - wget
        - git
        - tree

    - name: Start php-fpm
      service:
        name: php-fpm
        state: started

    - name: Create Directory /usr/share/nginx/{{centos}}
      file:
        path: "/usr/share/nginx/{{centos}}"
        state: directory
        owner: root
        group: root
        mode: 0775
        recurse: yes

    - name: Create Directory {{item}}
      file:
        path: "/etc/nginx/{{item}}"
        state: directory
        owner: root
        group: root
        mode: 0775
      with_items: ["sites-available", "sites-enabled"]

    - name: Check if File {{nginx}} Exists
      ansible.builtin.stat:
        path: "{{nginx}}"
      register: check_file_name

    - name: Print Debug
      ansible.builtin.debug:
        var: check_file_name

    - name: Backup + Copy File {{nginx}} to {{nginx}}.bak
      ansible.builtin.copy:
        remote_src: true
        src: "{{nginx}}"
        dest: "{{nginx}}.bak"
      when: check_file_name.stat.exists

    - name: Remove Old {{nginx}} File
      ansible.builtin.file:
        path: "{{nginx}}"
        state: absent
      when: check_file_name.stat.exists

    - name: Create New File "{{nginx}}"
      copy:
        dest: "{{nginx}}"
        content: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;
          include /usr/share/nginx/modules/*.conf;
          events {
              worker_connections 1024;
          }
          http {
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';
              access_log  /var/log/nginx/access.log  main;
              sendfile               on;
              tcp_nopush             on;
              tcp_nodelay            on;
              keepalive_timeout      65;
              types_hash_max_size    4096;
              include                /etc/nginx/mime.types;
              default_type           application/octet-stream;
              include                /etc/nginx/conf.d/*.conf;
              include                /etc/nginx/sites-enabled/*.conf;
          }
    - name: Create + Setting Virtual Host
      copy:
        dest: "/etc/nginx/sites-available/{{centos}}.conf"
        content: |
          server {
            listen 80;
            server_name {{centos}};
            root /usr/share/nginx/{{centos}};
            index index.html index.htm index.php;
            location / {
              try_files $uri $uri/ =404;
            }
            location ~ [^/]\.php(/|$) {
              fastcgi_split_path_info ^(.+?\.php)(/.*)$;
              fastcgi_pass unix:/var/run/php-fpm/www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
            }
            location ~ /\.ht {
              deny all;
            }
          }
    - name: Create Symbolic link
      file:
        src: "/etc/nginx/sites-available/{{centos}}.conf"
        dest: "/etc/nginx/sites-enabled/{{centos}}.conf"
        state: link
        force: yes

    - name: Create + Setting Info PHP
      copy:
        dest: "/usr/share/nginx/{{centos}}/index.php"
        content: |
          <?php
          // Show all information, defaults to INFO_ALL
          phpinfo();
          // Show just the module information.
          // phpinfo(8) yields identical results.
          phpinfo(INFO_MODULES);
          ?>
    - name: Restart Nginx Service
      service:
        name: nginx
        state: restarted
